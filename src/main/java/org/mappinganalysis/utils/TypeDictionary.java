package org.mappinganalysis.utils;import com.google.common.collect.Lists;import com.google.common.collect.Maps;import java.util.HashMap;import java.util.List;/** * Created by markus on 11/11/15. */public class TypeDictionary {  // BodyOfWater, http://dbpedia.org/ontology/ArchitecturalStructure  // http://dbpedia.org/ontology/Infrastructure  public static final List<String> GN_TYPE;  static {    GN_TYPE = Lists.newArrayList();    GN_TYPE.add("city, village,...");    GN_TYPE.add("parks,area, ...");    GN_TYPE.add("country, state, region ...");    GN_TYPE.add("mountain, hill, rock, ...");    GN_TYPE.add("spot, building, farm, ...");    GN_TYPE.add("stream, lake, ...");  }  public static final HashMap<String, String> PRIMARY_TYPE;  static  {    PRIMARY_TYPE = Maps.newHashMap();    PRIMARY_TYPE.put("http://dbpedia.org/ontology/Settlement", "Settlement");    PRIMARY_TYPE.put("http://dbpedia.org/ontology/Town", "Settlement");    PRIMARY_TYPE.put("http://dbpedia.org/ontology/City", "Settlement");    PRIMARY_TYPE.put("http://dbpedia.org/ontology/Village", "Settlement");    PRIMARY_TYPE.put("http://dbpedia.org/ontology/HistoricalSettlement", "Settlement");    PRIMARY_TYPE.put("http://dbpedia.org/ontology/CityDistrict", "Settlement");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/location.citytown", "Settlement");    PRIMARY_TYPE.put("city, village,...", "Settlement");//    PRIMARY_TYPE.put("http://linkedgeodata.org/ontology/Place", "Settlement");    PRIMARY_TYPE.put("http://linkedgeodata.org/ontology/Village", "Settlement");    PRIMARY_TYPE.put("http://linkedgeodata.org/ontology/City", "Settlement");    PRIMARY_TYPE.put("http://linkedgeodata.org/ontology/Town", "Settlement");    PRIMARY_TYPE.put("http://umbel.org/umbel/rc/Village", "Settlement");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/location.neighborhood", "Settlement");//    PRIMARY_TYPE.put("", "Settlement");//    PRIMARY_TYPE.put("", "Settlement");//    PRIMARY_TYPE.put("", "Settlement");    PRIMARY_TYPE.put("http://umbel.org/umbel/rc/Town", "Settlement");//    PRIMARY_TYPE.put("http://dbpedia.org/ontology/School", "School");    // http://linkedgeodata.org/ontology/Leisure    PRIMARY_TYPE.put("http://dbpedia.org/ontology/ShoppingMall", "ShoppingMall");    PRIMARY_TYPE.put("http://dbpedia.org/ontology/Country", "Country");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/location.country", "Country");    PRIMARY_TYPE.put("http://linkedgeodata.org/ontology/Park", "Park");    PRIMARY_TYPE.put("http://dbpedia.org/ontology/Park", "Park");    PRIMARY_TYPE.put("parks,area, ...", "Park");    //http://rdf.freebase.com/ns/en.sunset_park_brooklyn    //[http://rdf.freebase.com/ns/location.dated_location, http://rdf.freebase.com/ns/location.location, http://rdf.freebase.com/ns/location.statistical_region, http://rdf.freebase.com/ns/location.neighborhood]  }  public static final HashMap<String, String> SECONDARY_TYPE;  static  {    SECONDARY_TYPE = Maps.newHashMap();    SECONDARY_TYPE.put("http://dbpedia.org/ontology/School", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://linkedgeodata.org/ontology/School", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://linkedgeodata.org/ontology/Amenity", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Airport", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Station", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/LaunchPad", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Lock", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Port", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/PowerStation", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/RestArea", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/RouteOfTransportation", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/AmusementParkAttraction", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Arena", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Building", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Gate", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Infrastructure", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/MilitaryStructure", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Mill", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/NoteworthyPartOfBuilding", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Pyramid", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Shrine", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Square", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Tower", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Tunnel", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Venue", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Zoo", "ArchitecturalStructure");    SECONDARY_TYPE.put("spot, building, farm, ...", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/ProtectedArea", "ProtectedArea");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/PopulatedPlace", "PopulatedPlace");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/NaturalPlace", "NaturalPlace");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Archipelago", "NaturalPlace");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Beach", "NaturalPlace");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/BodyOfWater", "NaturalPlace");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Cave", "NaturalPlace");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Crater", "NaturalPlace");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Desert", "NaturalPlace");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Glacier", "NaturalPlace");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/HotSpring", "NaturalPlace");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Mountain", "NaturalPlace");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/MountainPass", "NaturalPlace");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/MountainRange", "NaturalPlace");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Valley", "NaturalPlace");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Volcano", "NaturalPlace");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Lake", "NaturalPlace");    SECONDARY_TYPE.put("mountain, hill, rock, ...", "NaturalPlace");    SECONDARY_TYPE.put("http://linkedgeodata.org/ontology/Glacier", "NaturalPlace");    SECONDARY_TYPE.put("http://linkedgeodata.org/ontology/Peak", "NaturalPlace");    SECONDARY_TYPE.put("http://linkedgeodata.org/ontology/Island", "NaturalPlace");    SECONDARY_TYPE.put("type=http://linkedgeodata.org/ontology/Bay", "NaturalPlace");    SECONDARY_TYPE.put("http://umbel.org/umbel/rc/Island", "NaturalPlace");    SECONDARY_TYPE.put("http://rdf.freebase.com/ns/geography.island", "NaturalPlace");    SECONDARY_TYPE.put("http://rdf.freebase.com/ns/geography.river", "NaturalPlace");    SECONDARY_TYPE.put("http://rdf.freebase.com/ns/geography.body_of_water", "NaturalPlace");    SECONDARY_TYPE.put("stream, lake, ...", "NaturalPlace");    // handle typeDetail    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Island", "NaturalPlace");    PRIMARY_TYPE.put("http://dbpedia.org/ontology/Lake", "Lake");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/AdministrativeRegion", "AdministrativeRegion");    SECONDARY_TYPE.put("country, state, region ...", "AdministrativeRegion");    SECONDARY_TYPE.put("http://rdf.freebase.com/ns/location.administrative_division", "AdministrativeRegion");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/HistoricPlace", "HistoricPlace");  }  public static final HashMap<String, String> TERTIARY_TYPE;  static {    TERTIARY_TYPE = Maps.newHashMap();    TERTIARY_TYPE.put("http://dbpedia.org/ontology/Place", "Place");    TERTIARY_TYPE.put("http://dbpedia.org/ontology/Location", "Location");    TERTIARY_TYPE.put("http://dbpedia.org/ontology/ArchitecturalStructure", "ArchitecturalStructure");    //Agent  }}