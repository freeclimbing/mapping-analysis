package org.mappinganalysis.utils;import com.google.common.collect.Maps;import java.util.HashMap;/** * Manually created type dictionary to handle rdf:type value over different data sets. */public class TypeDictionary {  public static final HashMap<String, String> PRIMARY_TYPE;  static  {    PRIMARY_TYPE = Maps.newHashMap();    PRIMARY_TYPE.put("http://dbpedia.org/ontology/Settlement", "Settlement");    PRIMARY_TYPE.put("http://dbpedia.org/ontology/Town", "Settlement");    PRIMARY_TYPE.put("http://dbpedia.org/ontology/City", "Settlement");    PRIMARY_TYPE.put("http://dbpedia.org/ontology/Village", "Settlement");    PRIMARY_TYPE.put("http://dbpedia.org/ontology/HistoricalSettlement", "Settlement");    PRIMARY_TYPE.put("http://dbpedia.org/ontology/CityDistrict", "Settlement");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/location.citytown", "Settlement");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/location.capital_of_administrative_division", "Settlement");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/location.neighborhood", "Settlement"); // area??    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/location.place_with_neighborhoods", "Settlement");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/location.de_city", "Settlement");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/location.in_city", "Settlement");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/location.jp_city_town", "Settlement");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/location.jp_designated_city", "Settlement");    PRIMARY_TYPE.put("city, village,...", "Settlement");    PRIMARY_TYPE.put("http://linkedgeodata.org/ontology/Village", "Settlement");    PRIMARY_TYPE.put("http://linkedgeodata.org/ontology/City", "Settlement");    PRIMARY_TYPE.put("http://linkedgeodata.org/ontology/Suburb", "Settlement");    PRIMARY_TYPE.put("http://linkedgeodata.org/ontology/Town", "Settlement");    PRIMARY_TYPE.put("http://umbel.org/umbel/rc/Village", "Settlement");    PRIMARY_TYPE.put("http://umbel.org/umbel/rc/Town", "Settlement");    PRIMARY_TYPE.put("http://umbel.org/umbel/rc/City", "Settlement");    PRIMARY_TYPE.put("http://schema.org/City", "Settlement");    PRIMARY_TYPE.put("http://schema.org/Town", "Settlement");    //water    PRIMARY_TYPE.put("http://linkedgeodata.org/ontology/Glacier", "NaturalPlace");    PRIMARY_TYPE.put("http://dbpedia.org/ontology/Lake", "NaturalPlace");    PRIMARY_TYPE.put("http://dbpedia.org/ontology/HotSpring", "NaturalPlace");    PRIMARY_TYPE.put("http://dbpedia.org/ontology/Glacier", "NaturalPlace");    PRIMARY_TYPE.put("http://linkedgeodata.org/ontology/Bay", "NaturalPlace");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/geography.river", "BodyOfWater");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/geography.lake", "BodyOfWater");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/geography.body_of_water", "BodyOfWater");    PRIMARY_TYPE.put("http://dbpedia.org/ontology/BodyOfWater", "BodyOfWater");    PRIMARY_TYPE.put("http://dbpedia.org/ontology/River", "BodyOfWater");    PRIMARY_TYPE.put("http://dbpedia.org/ontology/Lake", "BodyOfWater");    PRIMARY_TYPE.put("http://dbpedia.org/ontology/Ocean", "BodyOfWater");    PRIMARY_TYPE.put("http://dbpedia.org/ontology/Sea", "BodyOfWater");    PRIMARY_TYPE.put("http://dbpedia.org/ontology/Stream", "BodyOfWater");    PRIMARY_TYPE.put("stream", "BodyOfWater"); //8k    PRIMARY_TYPE.put("lake", "BodyOfWater"); //5k    PRIMARY_TYPE.put("glacier(s)", "BodyOfWater"); //2k    PRIMARY_TYPE.put("bay", "BodyOfWater");    PRIMARY_TYPE.put("sea", "BodyOfWater");    PRIMARY_TYPE.put("reservoir(s)", "BodyOfWater"); // todo    PRIMARY_TYPE.put("cove(s)", "BodyOfWater"); //700    PRIMARY_TYPE.put("channel", "BodyOfWater");    PRIMARY_TYPE.put("overfalls", "BodyOfWater");    PRIMARY_TYPE.put("canal", "BodyOfWater");    PRIMARY_TYPE.put("fjord", "BodyOfWater");    PRIMARY_TYPE.put("harbor(s)", "BodyOfWater"); // todo    PRIMARY_TYPE.put("inlet", "BodyOfWater");    PRIMARY_TYPE.put("spring(s)", "BodyOfWater");    PRIMARY_TYPE.put("waterfall(s)", "BodyOfWater");    //mountain    PRIMARY_TYPE.put("http://dbpedia.org/ontology/Mountain", "Mountain");    PRIMARY_TYPE.put("http://dbpedia.org/ontology/MountainPass", "Mountain");    PRIMARY_TYPE.put("http://dbpedia.org/ontology/MountainRange", "Mountain");    PRIMARY_TYPE.put("http://linkedgeodata.org/ontology/Peak", "Mountain");    PRIMARY_TYPE.put("mountain", "Mountain"); //80k    PRIMARY_TYPE.put("hill", "Mountain");//13k    PRIMARY_TYPE.put("peak", "Mountain");    PRIMARY_TYPE.put("mountains", "Mountain");    PRIMARY_TYPE.put("ridge(s)", "Mountain"); //1700    PRIMARY_TYPE.put("cape", "Mountain");    PRIMARY_TYPE.put("slope(s)", "Mountain");    PRIMARY_TYPE.put("valley", "Mountain"); // 700    PRIMARY_TYPE.put("hills", "Mountain");    PRIMARY_TYPE.put("pass", "Mountain");    PRIMARY_TYPE.put("rock", "Mountain");    PRIMARY_TYPE.put("rocks", "Mountain");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/geography.mountain", "Mountain");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/geography.mountain_pass", "Mountain");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/geography.mountain_range", "Mountain");    //island    PRIMARY_TYPE.put("http://umbel.org/umbel/rc/Island", "Island");    PRIMARY_TYPE.put("http://dbpedia.org/ontology/Island", "Island");    PRIMARY_TYPE.put("islands", "Island");    PRIMARY_TYPE.put("island", "Island");    PRIMARY_TYPE.put("islet", "Island");    PRIMARY_TYPE.put("http://linkedgeodata.org/ontology/Island", "Island");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/geography.island", "Island");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/geography.island_group", "Island");    PRIMARY_TYPE.put("http://dbpedia.org/ontology/School", "School");    PRIMARY_TYPE.put("http://dbpedia.org/ontology/University", "School");    PRIMARY_TYPE.put("http://dbpedia.org/ontology/EducationalInstitution", "School");    PRIMARY_TYPE.put("http://linkedgeodata.org/ontology/School", "School");    PRIMARY_TYPE.put("school", "School"); //165k    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/education.academic", "School");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/education.academic_institution", "School");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/education.department", "School");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/education.educational_institution", "School");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/education.educational_institution_campus", "School");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/education.field_of_study", "School");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/education.fraternity_sorority", "School");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/education.fraternity_sorority_type", "School");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/education.honorary_degree_recipient", "School");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/education.school", "School");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/education.school_category", "School");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/education.university", "School");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/education.university_system", "School");    PRIMARY_TYPE.put("http://dbpedia.org/ontology/Country", "Country");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/location.country", "Country");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/location.uk_overseas_territory", "Country");    PRIMARY_TYPE.put("dependent political entity", "Country");    PRIMARY_TYPE.put("http://linkedgeodata.org/ontology/Country", "Country");    PRIMARY_TYPE.put("independent political entity", "Country");    PRIMARY_TYPE.put("semi-independent political entity", "Country");    PRIMARY_TYPE.put("http://umbel.org/umbel/rc/Country", "Country");    PRIMARY_TYPE.put("http://dbpedia.org/ontology/Airport", "ArchitecturalStructure");    PRIMARY_TYPE.put("airport", "ArchitecturalStructure"); //9k gn    PRIMARY_TYPE.put("http://linkedgeodata.org/ontology/AerowayThing", "ArchitecturalStructure");    PRIMARY_TYPE.put("http://linkedgeodata.org/ontology/Airport", "ArchitecturalStructure");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/aviation.airline", "ArchitecturalStructure");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/aviation.airport", "ArchitecturalStructure");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/aviation.airport_operator", "ArchitecturalStructure");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/aviation.waypoint_type", "ArchitecturalStructure");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/aviation.aircraft_manufacturer", "ArchitecturalStructure");// freebase aviation type class missing    PRIMARY_TYPE.put("http://linkedgeodata.org/ontology/Park", "Park");    PRIMARY_TYPE.put("http://dbpedia.org/ontology/Park", "Park");    PRIMARY_TYPE.put("parks,area, ...", "Park"); // TODO area is not always similar to park    PRIMARY_TYPE.put("http://dbpedia.org/ontology/ProtectedArea", "Park"); // TODO protected area is not always park    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/protected_sites.governing_body_of_protected_sites", "Park");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/protected_sites.listed_site", "Park");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/protected_sites.natural_or_cultural_preservation_agency", "Park");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/protected_sites.park_system", "Park");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/protected_sites.protected_site", "Park");    PRIMARY_TYPE.put("http://rdf.freebase.com/ns/protected_sites.site_listing_category", "Park");    //http://rdf.freebase.com/ns/en.sunset_park_brooklyn    // http://rdf.freebase.com/ns/location.statistical_region, http://rdf.freebase.com/ns/location.neighborhood]  }  public static final HashMap<String, String> SECONDARY_TYPE;  static  {    SECONDARY_TYPE = Maps.newHashMap();    SECONDARY_TYPE.put("http://linkedgeodata.org/ontology/Amenity", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Station", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/LaunchPad", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Lock", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Port", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/PowerStation", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/RestArea", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/RouteOfTransportation", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/AmusementParkAttraction", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Arena", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Building", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Gate", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Infrastructure", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/MilitaryStructure", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Mill", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/NoteworthyPartOfBuilding", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Pyramid", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Shrine", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Square", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Tower", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Tunnel", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Venue", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Zoo", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/ShoppingMall", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Stadium", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/RailwayStation", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Dam", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/SportFacility", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://rdf.freebase.com/ns/architecture.venue", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://rdf.freebase.com/ns/architecture.building", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://rdf.freebase.com/ns/architecture.building_complex", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://rdf.freebase.com/ns/architecture.landscape_project", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://rdf.freebase.com/ns/architecture.museum", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://rdf.freebase.com/ns/architecture.structure", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://rdf.freebase.com/ns/architecture.building_function", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://rdf.freebase.com/ns/architecture.building_occupant", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://rdf.freebase.com/ns/architecture.landscape_project", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://rdf.freebase.com/ns/architecture.skyscraper", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://rdf.freebase.com/ns/architecture.type_of_museum", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://rdf.freebase.com/ns/transportation.road", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://rdf.freebase.com/ns/transportation.bridge", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://rdf.freebase.com/ns/zoos.zoo", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://rdf.freebase.com/ns/zoos.zoo_exhibit", "ArchitecturalStructure");    // spot building farm    SECONDARY_TYPE.put("railroad station", "ArchitecturalStructure"); //8k    SECONDARY_TYPE.put("tower", "ArchitecturalStructure"); //2600    SECONDARY_TYPE.put("building(s)", "ArchitecturalStructure"); //2100    SECONDARY_TYPE.put("stadium", "ArchitecturalStructure");    SECONDARY_TYPE.put("church", "ArchitecturalStructure");    SECONDARY_TYPE.put("museum", "ArchitecturalStructure");    SECONDARY_TYPE.put("hostpital", "ArchitecturalStructure"); //1000    SECONDARY_TYPE.put("castle", "ArchitecturalStructure");    SECONDARY_TYPE.put("airfield", "ArchitecturalStructure");    // general gn type    SECONDARY_TYPE.put("spot, building, farm, ...", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://linkedgeodata.org/ontology/Leisure", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://rdf.freebase.com/ns/amusement_parks.park", "ArchitecturalStructure");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/NaturalPlace", "NaturalPlace"); // todo    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Archipelago", "NaturalPlace");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Beach", "NaturalPlace");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Cave", "NaturalPlace");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Crater", "NaturalPlace");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Desert", "NaturalPlace");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Valley", "NaturalPlace");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Volcano", "NaturalPlace");    SECONDARY_TYPE.put("volcano", "NaturalPlace");//165    SECONDARY_TYPE.put("http://rdf.freebase.com/ns/geography.geographical_feature", "NaturalPlace");    // general gn type    SECONDARY_TYPE.put("mountain, hill, rock, ...", "NaturalPlace");    SECONDARY_TYPE.put("stream, lake, ...", "NaturalPlace");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/AdministrativeRegion", "AdministrativeRegion");    SECONDARY_TYPE.put("country, state, region ...", "AdministrativeRegion");    SECONDARY_TYPE.put("http://rdf.freebase.com/ns/location.administrative_division", "AdministrativeRegion");    SECONDARY_TYPE.put("http://rdf.freebase.com/ns/location.statistical_region", "AdministrativeRegion");    SECONDARY_TYPE.put("http://rdf.freebase.com/ns/location.us_state", "AdministrativeRegion");    SECONDARY_TYPE.put("http://rdf.freebase.com/ns/location.fr_region", "AdministrativeRegion");    SECONDARY_TYPE.put("http://rdf.freebase.com/ns/location.province", "AdministrativeRegion");    SECONDARY_TYPE.put("http://rdf.freebase.com/ns/location.in_state", "AdministrativeRegion");    SECONDARY_TYPE.put("http://rdf.freebase.com/ns/location.mx_state", "AdministrativeRegion");    SECONDARY_TYPE.put("http://rdf.freebase.com/ns/location.es_autonomous_community", "AdministrativeRegion");    SECONDARY_TYPE.put("http://rdf.freebase.com/ns/location.fr_department", "AdministrativeRegion");    SECONDARY_TYPE.put("http://rdf.freebase.com/ns/location.it_comune", "AdministrativeRegion");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/Region", "AdministrativeRegion");    SECONDARY_TYPE.put("http://dbpedia.org/ontology/HistoricPlace", "HistoricPlace");  }  public static final HashMap<String, String> TERTIARY_TYPE;  static {    TERTIARY_TYPE = Maps.newHashMap();    TERTIARY_TYPE.put("http://dbpedia.org/ontology/Place", "Place");    TERTIARY_TYPE.put("http://dbpedia.org/ontology/PopulatedPlace", "PopulatedPlace");    TERTIARY_TYPE.put("http://dbpedia.org/ontology/Location", "Location");    TERTIARY_TYPE.put("http://rdf.freebase.com/ns/location.location", "Location");    TERTIARY_TYPE.put("http://rdf.freebase.com/ns/location.dated_location", "Location");    TERTIARY_TYPE.put("http://umbel.org/umbel/rc/Location_Underspecified", "Location");    TERTIARY_TYPE.put("http://dbpedia.org/ontology/ArchitecturalStructure", "ArchitecturalStructure");    TERTIARY_TYPE.put("http://linkedgeodata.org/ontology/Place", "Place");    TERTIARY_TYPE.put("http://dbpedia.org/ontology/NaturalPlace", "NaturalPlace");    TERTIARY_TYPE.put("http://linkedgeodata.org/ontology/NaturalThing", "NaturalPlace");    TERTIARY_TYPE.put("http://schema.org/Place", "Place");    TERTIARY_TYPE.put("http://umbel.org/umbel/rc/PopulatedPlace", "PopulatedPlace");    //Agent -> no equivalent, no place!?  }}